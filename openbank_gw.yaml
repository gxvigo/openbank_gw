swagger: '2.0'
info:
  version: '1.3'
  title: openbank
  x-ibm-name: openbank
  contact:
    name: giovanni
    email: giovanni@nz.ibm.com
  description: Set of api for fromopenbank
paths:
  /banks:
    post:
      tags:
        - bank
      summary: Create a new instance of the model and persist it into the data source.
      operationId: add.bank
      parameters:
        - name: data
          in: body
          description: Model bank
          required: true
          schema:
            $ref: '#/definitions/bank'
      responses:
        '200':
          description: Request was successful
          schema:
            type: string
      deprecated: false
    get:
      tags:
        - bank
      summary: Find all instances of the model matched by filter from the data source.
      operationId: get.banks
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/bank'
      deprecated: false
  '/banks/{bank_id}':
    get:
      operationId: get.bank
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/bank'
      parameters:
        - name: bank_id
          type: string
          required: true
          in: path
  '/banks/{bank_id}/accounts':
    get:
      responses:
        '200':
          description: 200 OK
          schema:
            type: array
            items:
              $ref: '#/definitions/account'
      parameters:
        - name: bank_id
          type: string
          required: true
          in: path
      operationId: get.accounts
    post:
      responses:
        '200':
          description: Request was successful
          schema:
            type: string
      parameters:
        - name: bank_id
          type: string
          required: true
          in: path
        - name: data
          required: true
          in: body
          schema:
            $ref: '#/definitions/account'
          description: Model account
      operationId: add.account
  '/banks/{bank_id}/accounts/{account_id}':
    get:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/account'
      parameters:
        - name: bank_id
          type: string
          required: true
          in: path
        - name: account_id
          type: string
          required: true
          in: path
      operationId: get.account
  '/banks/{bank_id}/accounts/{account_id}/transactions':
    get:
      responses:
        '200':
          description: 200 OK
          schema:
            type: array
            items:
              $ref: '#/definitions/transaction'
      parameters:
        - name: bank_id
          type: string
          required: true
          in: path
        - name: account_id
          type: string
          required: true
          in: path
      operationId: get.transactions
    post:
      responses:
        '200':
          description: Request was successful
          schema:
            type: string
      operationId: add.transaction
      parameters:
        - name: bank_id
          required: true
          in: path
          type: string
        - name: account_id
          type: string
          required: true
          in: path
        - name: data
          required: true
          in: body
          schema:
            $ref: '#/definitions/transaction'
          description: Model transaction
  '/banks/{bank_id}/accounts/{account_id}/transactions/{transaction_id}':
    get:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/transaction'
      parameters:
        - name: bank_id
          type: string
          required: true
          in: path
        - name: account_id
          type: string
          required: true
          in: path
        - name: transaction_id
          type: string
          required: true
          in: path
      operationId: get.transaction
definitions:
  transaction:
    properties:
      transaction_id:
        type: string
      this_account_id:
        type: string
      other_account_id:
        type: string
      type:
        type: string
      description:
        type: string
      posted:
        type: string
        format: date
      completed:
        type: string
        format: date
      value_currency:
        type: string
        example: nzd
      value_amount:
        type: number
      where_lat:
        type: string
      where_lon:
        type: string
    required:
      - transaction_id
      - this_account_id
      - other_account_id
      - description
      - posted
      - completed
      - value_currency
      - value_amount
      - where_lat
      - where_lon
      - type
  account:
    properties:
      account_id:
        type: string
      IBAN:
        type: string
      balance:
        type: number
      label:
        type: string
      owner:
        type: string
      type:
        type: string
    required:
      - account_id
      - IBAN
      - balance
      - label
      - owner
      - type
  bank:
    properties:
      website:
        type: string
        example: www.bnz.co.nz
      logo:
        type: string
        example: www.bnz.co.nz/logo.gif
      long_name:
        type: string
        example: bank of new zealand
      short_name:
        type: string
        example: bnz
      bank_id:
        type: string
        example: bnz
    required:
      - bank_id
      - website
      - logo
      - long_name
      - short_name
consumes:
  - application/json
produces:
  - application/json
schemes:
  - https
host: '192.168.225.1:8080'
x-ibm-configuration:
  assembly:
    execute:
      - activity-log:
          title: activity-log
          content: payload
          error-content: payload
      - invoke:
          target-url: $(target_server)$(request.path)
  gateway: datapower-gateway
  enforced: true
  testable: true
  phase: realized
  cors:
    enabled: true
  properties:
    target_server:
      value: 'http://192.168.225.1:8080'
      description: ''
      encoded: false
basePath: /
